ActivateSceneIntent:
  action:
    service: scene.turn_on
    data_template:
      entity_id: scene.{{ Scene | replace(" ", "") }}
  speech:
    type: ssml
    text: >
      {% if Scene == "red" %}
        <speak><emphasis level="strong"><prosody pitch="-20%" volume="medium">Yes sir.</prosody></emphasis><break time="3s"/></speak>
      {% else %}
        <speak>Turning on scene {{ Scene }}</speak>
      {% endif %}
WatchSomethingIntent:
  action:
    service: script.turn_on
    entity_id: script.theater_on
  speech:
    type: ssml
    text: <speak><break time="3s" />Enjoy the movie. Please silence your phones.</speak>
IntermissionIntent:
  action:
    service: script.turn_on
    entity_id: script.theater_intermission
  speech:
    type: plain
    text: Okay! Let's all go to the lobby. To resume, say "tell home resume"
ResumeWatchingIntent:
  action:
    service: script.turn_on
    entity_id: script.theater_resume
  speech:
    type: plain
    text: Enjoy
DavidLynchIntent:
  action:
    # Turn Off all lights for 2 seconds (--Silence--)
    - service: scene.turn_on
      entity_id: scene.darkness_instant
    - delay:
        seconds: 3
    # Turn on water light for 2 seconds ("..This... is")
    - service: switch.turn_on
      entity_id: switch.water_light
    - delay:
        seconds: 2
    # Turn off water light for 2 seconds (".. the water..")
    - service: switch.turn_off
      entity_id: switch.water_light
    - delay:
        seconds: 2
    # Turn on underwater scene for 5 seconds ("And this is the well")
    - service: scene.turn_on
      entity_id: scene.underwater_no_water_light
    - delay:
        seconds: 2
    - service: scene.turn_on
      entity_id: scene.darkness_instant
    - delay:
        seconds: 2
    - service: scene.turn_on
      entity_id: scene.underwater
    - service: scene.turn_on
      entity_id: scene.david_lynch
    - service: script.playlist_black_lodge
    - service: script.david_lynch_projections
    - service: light.turn_off
      entity_id: light.the_sun
  speech:
    type: ssml
    text: <speak><break time="3s" /><emphasis level="strong"><prosody pitch="-33.3%" rate="50%">This<break strength="x-strong" /> is the water.<break time="1s" /> And this <break strength="x-strong" /><break time="1s" />is the well. <break time="2s" /> Drink full, and descend. <break time="3s" /><amazon:effect name="whispered">The horse is the white of the eyes, and dark within.</amazon:effect></prosody></emphasis></speak>
OffensiveEntryIntent:
  action:
    service: scene.turn_on
    data_template:
      entity_id: scene.red
  speech:
    type: ssml
    text: >
        <speak><emphasis level="strong"><prosody pitch="-20%" volume="medium">Yes sir.</prosody></emphasis><break time="3s"/></speak>

HASayStuffIntent:
#  action:
#    service: tts.google_say
#    data:
#      message: "Welcome Home"
#      entity_id: media_player.rpi_speaker
  speech:
    text: >
      {%- set leaveForAshby = states('sensor.leave_by_home_to_work_parking_ashby') -%}
      {%- set leaveForAguirowitz = states('sensor.leave_by_home_to_work_parking_aguirowitz') -%}
      {% if ParkingSpot == "ashby" %}
        {{ leaveForAshby }} minutes.
      {% elif ParkingSpot == "aguirowitz" or ParkingSpot == 'mlk' %}
        {{ leaveForAguirowitz }} minutes.
      {% else %}
        {{ leaveForAshby }} minutes if parking at Ashby.
        {{ leaveForAguirowitz }} minutes if parking at uh-gearowits.
      {% endif %}

MakeCoffeeIntent:
  action:
    service: switch.turn_on
    entity_id: switch.is_coffee_loaded
  speech:
    text: >
      Okay. Coffee Maker will turn on at 7:15 am.

ClimateIntentTooCold:
  action:
    service: script.turn_on
    entity_id: script.set_too_cold

ClimateIntentTooWarm:
  action:
    service: script.turn_on
    entity_id: script.set_too_warm

RebootRouterIntent:
  action:
    service: script.turn_on
    entity_id: script.reboot_router
      
