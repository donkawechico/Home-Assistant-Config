$(function(){ //DOM Ready

    function navigate(url)
    {
        window.location.href = url;
    }

    $(document).attr("title", "Main Panel");
    content_width = (120 + 5) * 8 + 5
    $('.gridster').width(content_width)
    $(".gridster ul").gridster({
        widget_margins: [5, 5],
        widget_base_dimensions: [120, 120],
        avoid_overlapped_widgets: true,
        max_rows: 15,
        max_size_x: 8,
        shift_widgets_up: false
    }).data('gridster').disable();
    
    // Add Widgets

    var gridster = $(".gridster ul").gridster().data('gridster');
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseclock-default-clock-clock" id="default-clock-clock"><h1 class="date"data-bind="text: date, attr: {style: date_style}"></h1><h2 class="time" data-bind="text: time, attr: {style: time_style}"></h2></div></li>', 2, 2, 1, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-label-sensors" id="default-label-sensors"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 6, 1, 3, 1)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-sensor-front-door" id="default-sensor-front-door"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 3, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-dark-outside-sensor" id="default-dark-outside-sensor"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 4, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-donnie-presence" id="default-donnie-presence"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 5, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-christine-presence" id="default-christine-presence"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 6, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-pir-1" id="default-pir-1"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 7, 2)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-label-rooms" id="default-label-rooms"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 3, 1, 1, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-label-scenes" id="default-label-scenes"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 1, 4, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-label-sync" id="default-label-sync"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 2, 1, 6, 3)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-house-lights" id="default-house-lights"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 1, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-livingroom" id="default-livingroom"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 2, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-kitchen" id="default-kitchen"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 3, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-underwater-scene" id="default-underwater-scene"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 4, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-darkness-scene" id="default-darkness-scene"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 5, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-kitchen-strip" id="default-kitchen-strip"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 6, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-sync-kitchen-strip" id="default-sync-kitchen-strip"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 7, 4)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-shop" id="default-shop"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 1, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baselight-default-bedroom" id="default-bedroom"><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><span class="toggle-area" id="switch"></span><p class="state_text" data-bind="text: state_text, attr:{style: state_text_style}"></p><div class="levelunit"><p class="level" data-bind="text: level, attr:{style: level_style}"></p><p class="unit" data-bind="html: units, attr:{style: unit_style}"></p></div><p class="secondary-icon minus"><i data-bind="attr: {class: icon_down, style: level_down_style}" id="level-down"></i></p><p class="secondary-icon plus"><i data-bind="attr: {class: icon_up, style: level_up_style}" id="level-up"></i></p></div></li>', 1, 1, 2, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-theater-scene" id="default-theater-scene"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 4, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-baseswitch-default-warm-scene" id="default-warm-scene"><span class="toggle-area" id="switch"></span><h1 class="title" data-bind="text: title, attr:{style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{style: title2_style}"></h1><h2 class="icon" data-bind="attr:{style: icon_style}"><i data-bind="attr: {class: icon}"></i></h2><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 1, 1, 5, 5)
    
        gridster.add_widget('<li><div data-bind="attr: {style: widget_style}" class="widget widget-basedisplay-default-label-state" id="default-label-state"><h1 class="title" data-bind="text: title, attr:{ style: title_style}"></h1><h1 class="title2" data-bind="text: title2, attr:{ style: title2_style}"></h1><div class="valueunit"><h2 class="value" data-bind="html: value, attr:{ style: value_style}"></h2><p class="unit" data-bind="html: unit, attr:{ style: unit_style}"></p></div><h1 class="state_text" data-bind="text: state_text, attr: {style: state_text_style}"></h1></div></li>', 4, 1, 5, 6)
    
    
    
    var widgets = {}
    // Initialize Widgets
    
        widgets["default-clock-clock"] = new baseclock("default-clock-clock", "", "default", {'fields': {'time': '', 'date': ''}, 'entity': 'clock.clock', 'static_icons': [], 'title_is_friendly_name': 1, 'static_css': {'widget_style': 'background-color: #444;', 'time_style': 'color: #aa00ff;', 'date_style': 'color: #fff;'}, 'use_hass_icon': 1, 'precision': 1, 'use_comma': 0, 'icons': [], 'widget_type': 'baseclock', 'css': {}})
    
        widgets["default-label-sensors"] = new basedisplay("default-label-sensors", "", "default", {'fields': {'value': 'Sensors', 'unit': '', 'title2': '', 'title': '', 'state_text': ''}, 'widget_type': 'basedisplay', 'static_icons': [], 'static_css': {'state_text_style': 'color: #fff;', 'value_style': 'color: #fff;', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'use_hass_icon': 1, 'precision': 1, 'use_comma': 0, 'icons': [], 'css': {}})
    
        widgets["default-sensor-front-door"] = new basedisplay("default-sensor-front-door", "", "default", {'sub_entity': '', 'title_is_friendly_name': 1, 'static_css': {'state_text_style': 'font-size: 100%;color: #fff;', 'value_style': '', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'precision': 1, 'widget_type': 'basedisplay', 'icons': [], 'entity': 'sensor.front_door', 'static_icons': [], 'fields': {'value': '', 'unit': '', 'title2': '', 'title': '', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'css': {'unit_style': 'font-size: 100%;color: #00aaff;', 'text_style': 'font-size: 100%;color: #fff;', 'value_style': 'font-size: 250%;color: #00aaff;'}})
    
        widgets["default-dark-outside-sensor"] = new baseswitch("default-dark-outside-sensor", "", "default", {'icon_on': 'mdi-weather-night', 'state_active': 'on', 'enable': 0, 'icon_off': 'mdi-weather-sunny', 'static_css': {'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'state_text_style': 'color: #fff;'}, 'fields': {'icon_style': '', 'title2': '', 'title': 'Dark Outside', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #ff0055;'}, 'widget_type': 'baseswitch', 'state_inactive': 'off', 'entity': 'binary_sensor.dark_out', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-weather-night', 'icon_off': 'mdi-weather-sunny'}})
    
        widgets["default-donnie-presence"] = new baseswitch("default-donnie-presence", "", "default", {'post_service_active': {'service': 'device_tracker/see', 'dev_id': 'donkawechico_heroqltevzw', 'location_name': 'home'}, 'state_active': 'home', 'post_service_inactive': {'service': 'device_tracker/see', 'dev_id': 'donkawechico_heroqltevzw', 'location_name': 'not_home'}, 'enable': 0, 'static_css': {'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'state_text_style': 'color: #fff;'}, 'fields': {'icon_style': '', 'title2': '', 'title': 'Donnie', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'widget_type': 'baseswitch', 'state_map': {'not_home': 'AWAY', 'home': 'HOME'}, 'state_inactive': 'not_home', 'entity': 'device_tracker.donkawechico_heroqltevzw', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'fa-user', 'icon_off': 'fa-user'}, 'state_text': 1})
    
        widgets["default-christine-presence"] = new baseswitch("default-christine-presence", "", "default", {'post_service_active': {'service': 'device_tracker/see', 'dev_id': 'android2426752091905543', 'location_name': 'home'}, 'state_active': 'home', 'post_service_inactive': {'service': 'device_tracker/see', 'dev_id': 'android2426752091905543', 'location_name': 'not_home'}, 'enable': 0, 'static_css': {'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'title_style': 'color: red;', 'state_text_style': 'color: #fff;'}, 'state_text': 1, 'fields': {'icon_style': '', 'title2': '', 'title': 'Christine', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'widget_type': 'baseswitch', 'title_style': 'color: red;', 'state_inactive': 'not_home', 'entity': 'device_tracker.android2426752091905543', 'state_map': {'not_home': 'AWAY', 'home': 'HOME'}, 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'fa-user', 'icon_off': 'fa-user'}, 'static_icons': []})
    
        widgets["default-pir-1"] = new basedisplay("default-pir-1", "", "default", {'entity': 'sensor.motion_sensor', 'use_hass_icon': 1, 'sub_entity': '', 'static_icons': [], 'static_css': {'state_text_style': 'font-size: 100%;color: #fff;', 'value_style': '', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'precision': 1, 'fields': {'value': '', 'unit': '', 'title2': '', 'title': 'House Movement', 'state_text': ''}, 'use_comma': 0, 'icons': [], 'css': {'unit_style': 'font-size: 100%;color: #00aaff;', 'text_style': 'font-size: 100%;color: #fff;', 'value_style': 'font-size: 250%;color: #00aaff;'}, 'widget_type': 'basedisplay'})
    
        widgets["default-label-rooms"] = new basedisplay("default-label-rooms", "", "default", {'fields': {'value': 'Room Lights', 'unit': '', 'title2': '', 'title': '', 'state_text': ''}, 'widget_type': 'basedisplay', 'static_icons': [], 'static_css': {'state_text_style': 'color: #fff;', 'value_style': 'color: #fff;', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'use_hass_icon': 1, 'precision': 1, 'use_comma': 0, 'icons': [], 'css': {}})
    
        widgets["default-label-scenes"] = new basedisplay("default-label-scenes", "", "default", {'fields': {'value': 'Scenes', 'unit': '', 'title2': '', 'title': '', 'state_text': ''}, 'widget_type': 'basedisplay', 'static_icons': [], 'static_css': {'state_text_style': 'color: #fff;', 'value_style': 'color: #fff;', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'use_hass_icon': 1, 'precision': 1, 'use_comma': 0, 'icons': [], 'css': {}})
    
        widgets["default-label-sync"] = new basedisplay("default-label-sync", "", "default", {'fields': {'value': 'Sync', 'unit': '', 'title2': '', 'title': '', 'state_text': ''}, 'widget_type': 'basedisplay', 'static_icons': [], 'static_css': {'state_text_style': 'color: #fff;', 'value_style': 'color: #fff;', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'use_hass_icon': 1, 'precision': 1, 'use_comma': 0, 'icons': [], 'css': {}})
    
        widgets["default-house-lights"] = new baselight("default-house-lights", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.house_lights'}, 'icon_on': 'mdi-home', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.house_lights'}, 'icon_off': 'mdi-home', 'static_css': {'state_text_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'title_style': 'color: #fff;'}, 'precision': 1, 'widget_type': 'baselight', 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'entity': 'group.house_lights', 'static_icons': {'icon_down': 'fa-minus', 'icon_up': 'fa-plus'}, 'fields': {'level': '', 'units': '%', 'icon': '', 'icon_style': '', 'title2': '', 'title': 'House', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-home', 'icon_off': 'mdi-home'}})
    
        widgets["default-livingroom"] = new baselight("default-livingroom", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.living_room'}, 'icon_on': 'mdi-sofa', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.living_room'}, 'icon_off': 'mdi-sofa', 'static_css': {'state_text_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'title_style': 'color: #fff;'}, 'precision': 1, 'widget_type': 'baselight', 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'entity': 'group.living_room', 'static_icons': {'icon_down': 'fa-minus', 'icon_up': 'fa-plus'}, 'fields': {'level': '', 'units': '%', 'icon': '', 'icon_style': '', 'title2': '', 'title': 'Livingroom', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-sofa', 'icon_off': 'mdi-sofa'}})
    
        widgets["default-kitchen"] = new baselight("default-kitchen", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.kitchen'}, 'icon_on': 'mdi-fridge', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.kitchen'}, 'icon_off': 'mdi-fridge', 'static_css': {'state_text_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'title_style': 'color: #fff;'}, 'precision': 1, 'widget_type': 'baselight', 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'entity': 'group.kitchen', 'static_icons': {'icon_down': 'fa-minus', 'icon_up': 'fa-plus'}, 'fields': {'level': '', 'units': '%', 'icon': '', 'icon_style': '', 'title2': '', 'title': 'Kitchen', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-fridge', 'icon_off': 'mdi-fridge'}})
    
        widgets["default-underwater-scene"] = new baseswitch("default-underwater-scene", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'scene.underwater'}, 'icon_on': 'mdi-fish', 'state_active': 'stillscening', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'scene.underwater'}, 'enable': 1, 'icon_off': 'mdi-fish', 'static_css': {'widget_style': 'background-color: #AED6F1;', 'title2_style': 'color: #fff;', 'title_style': 'font-weight:bold;color: #138D75;', 'state_text_style': 'color: #fff;'}, 'ignore_state': 1, 'fields': {'icon_style': '', 'title2': '', 'title': 'Underwater', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'widget_type': 'baseswitch', 'title_style': 'font-weight:bold;color: #138D75;', 'state_inactive': 'scening', 'entity': 'scene.underwater', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-fish', 'icon_off': 'mdi-fish'}, 'momentary': 1000, 'widget_style': 'background-color: #AED6F1;'})
    
        widgets["default-darkness-scene"] = new baseswitch("default-darkness-scene", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'scene.darkness'}, 'icon_on': 'mdi-lightbulb', 'state_active': 'stillscening', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'scene.darkness'}, 'enable': 1, 'icon_off': 'mdi-lightbulb-on', 'static_css': {'widget_style': 'background-color: #8E44AD;', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'state_text_style': 'color: #fff;'}, 'ignore_state': 1, 'fields': {'icon_style': '', 'title2': '', 'title': 'Lights Off', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'widget_type': 'baseswitch', 'state_inactive': 'scening', 'entity': 'scene.darkness', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-lightbulb', 'icon_off': 'mdi-lightbulb-on'}, 'momentary': 1000, 'widget_style': 'background-color: #8E44AD;'})
    
        widgets["default-kitchen-strip"] = new baselight("default-kitchen-strip", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'light.kitchen_strip'}, 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'light.kitchen_strip'}, 'static_css': {'state_text_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'title_style': 'color: #fff;'}, 'precision': 1, 'widget_type': 'baselight', 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'entity': 'light.kitchen_strip', 'static_icons': {'icon_down': 'fa-minus', 'icon_up': 'fa-plus'}, 'fields': {'level': '', 'units': '%', 'icon': '', 'icon_style': '', 'title2': '', 'title': 'Kitchen Strip', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'fa-circle', 'icon_off': 'fa-circle-thin'}})
    
        widgets["default-sync-kitchen-strip"] = new baseswitch("default-sync-kitchen-strip", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'input_boolean.kitchen_strip_on'}, 'state_active': 'on', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'input_boolean.kitchen_strip_on'}, 'enable': 1, 'static_css': {'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'state_text_style': 'color: #fff;'}, 'fields': {'icon_style': '', 'title2': '', 'title': 'Is Kitchen Strip On', 'icon': '', 'state_text': ''}, 'widget_type': 'baseswitch', 'state_inactive': 'off', 'entity': 'input_boolean.kitchen_strip_on', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'fa-sliders', 'icon_off': 'fa-sliders'}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}})
    
        widgets["default-shop"] = new baselight("default-shop", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.shop'}, 'icon_on': 'mdi-wrench', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.shop'}, 'icon_off': 'mdi-wrench', 'static_css': {'state_text_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'title_style': 'color: #fff;'}, 'precision': 1, 'widget_type': 'baselight', 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'entity': 'group.shop', 'static_icons': {'icon_down': 'fa-minus', 'icon_up': 'fa-plus'}, 'fields': {'level': '', 'units': '%', 'icon': '', 'icon_style': '', 'title2': '', 'title': 'Shop', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-wrench', 'icon_off': 'mdi-wrench'}})
    
        widgets["default-bedroom"] = new baselight("default-bedroom", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'group.bedroom'}, 'icon_on': 'mdi-hotel', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'group.bedroom'}, 'icon_off': 'mdi-hotel', 'static_css': {'state_text_style': 'color: #fff;', 'level_up_style': 'color: #888;', 'level_down_style': 'color: #888;', 'widget_style': 'background-color: #444;', 'title2_style': 'color: #fff;', 'unit_style': 'color: #fff;', 'level_style': 'color: #fff;', 'title_style': 'color: #fff;'}, 'precision': 1, 'widget_type': 'baselight', 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'entity': 'group.bedroom', 'static_icons': {'icon_down': 'fa-minus', 'icon_up': 'fa-plus'}, 'fields': {'level': '', 'units': '%', 'icon': '', 'icon_style': '', 'title2': '', 'title': 'Bedroom', 'state_text': ''}, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-hotel', 'icon_off': 'mdi-hotel'}})
    
        widgets["default-theater-scene"] = new baseswitch("default-theater-scene", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'scene.theater'}, 'icon_on': 'mdi-movie', 'state_active': 'stillscening', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'scene.theater'}, 'enable': 1, 'icon_off': 'mdi-movie', 'static_css': {'widget_style': 'background-color: #E59866;', 'title2_style': 'color: #fff;', 'title_style': 'font-weight:bold;color: #922B21;', 'state_text_style': 'color: #fff;'}, 'ignore_state': 1, 'fields': {'icon_style': '', 'title2': '', 'title': 'Theater Mode', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'widget_type': 'baseswitch', 'title_style': 'font-weight:bold;color: #922B21;', 'state_inactive': 'scening', 'entity': 'scene.theater', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-movie', 'icon_off': 'mdi-movie'}, 'momentary': 1000, 'widget_style': 'background-color: #E59866;'})
    
        widgets["default-warm-scene"] = new baseswitch("default-warm-scene", "", "default", {'post_service_active': {'service': 'homeassistant/turn_on', 'entity_id': 'scene.warm'}, 'icon_on': 'mdi-weather-sunset', 'state_active': 'stillscening', 'post_service_inactive': {'service': 'homeassistant/turn_off', 'entity_id': 'scene.warm'}, 'enable': 1, 'icon_off': 'mdi-weather-sunset', 'static_css': {'widget_style': 'background-color: #F7DC6F;', 'title2_style': 'color: #fff;', 'title_style': 'font-weight:bold;color: #D35400;', 'state_text_style': 'color: #fff;'}, 'ignore_state': 1, 'fields': {'icon_style': '', 'title2': '', 'title': 'Warm', 'icon': '', 'state_text': ''}, 'css': {'icon_style_inactive': 'color: #888;', 'icon_style_active': 'color: #aaff00;'}, 'widget_type': 'baseswitch', 'title_style': 'font-weight:bold;color: #D35400;', 'state_inactive': 'scening', 'entity': 'scene.warm', 'static_icons': [], 'precision': 1, 'use_hass_icon': 1, 'use_comma': 0, 'icons': {'icon_on': 'mdi-weather-sunset', 'icon_off': 'mdi-weather-sunset'}, 'momentary': 1000, 'widget_style': 'background-color: #F7DC6F;'})
    
        widgets["default-label-state"] = new basedisplay("default-label-state", "", "default", {'fields': {'value': 'States', 'unit': '', 'title2': '', 'title': '', 'state_text': ''}, 'widget_type': 'basedisplay', 'static_icons': [], 'static_css': {'state_text_style': 'color: #fff;', 'value_style': 'color: #fff;', 'unit_style': '', 'title2_style': 'color: #fff;', 'title_style': 'color: #fff;', 'widget_style': 'background-color: #444;'}, 'use_hass_icon': 1, 'precision': 1, 'use_comma': 0, 'icons': [], 'css': {}})
    

    // Setup click handler to cancel timeout navigations

    $( ".gridster" ).click(function(){
        clearTimeout(myTimeout);
    });

    // Set up timeout

    var myTimeout

    if (location.search != "")
    {
        var query = location.search.substr(1);
        var result = {};
        query.split("&").forEach(function(part) {
        var item = part.split("=");
        result[item[0]] = decodeURIComponent(item[1]);
        });

        if ("timeout" in result && "return" in result)
        {
            url = result.return
            argcount = 0
            for (arg in result)
            {
                if (arg != "timeout" && arg != "return")
                {
                    if (argcount == 0)
                    {
                        url += "?";
                    }
                    else
                    {
                        url += "?";
                    }
                    argcount ++;
                    url += arg + "=" + result[arg]
                }
            }
            myTimeout = setTimeout(function() { navigate(url); }, result.timeout * 1000);
        }
    }

    // Start listening for HA Events
    if (location.protocol == 'https:')
    {
        wsprot = "wss:"
    }
    else
    {
        wsprot = "ws:"
    }
    var stream_url = wsprot + '//' + location.host + '/stream'
    ha_status(stream_url, "Main Panel", widgets);

});